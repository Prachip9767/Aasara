// Generated by view binder compiler. Do not edit!
package com.app.daan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.daan.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBanks;

  @NonNull
  public final Button btnHospitals;

  @NonNull
  public final Button btnHotels;

  @NonNull
  public final Button btnRestaurants;

  @NonNull
  public final Button btnSchools;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final EditText txtPlace;

  private ActivityMapsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBanks,
      @NonNull Button btnHospitals, @NonNull Button btnHotels, @NonNull Button btnRestaurants,
      @NonNull Button btnSchools, @NonNull Button btnSearch,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull EditText txtPlace) {
    this.rootView = rootView;
    this.btnBanks = btnBanks;
    this.btnHospitals = btnHospitals;
    this.btnHotels = btnHotels;
    this.btnRestaurants = btnRestaurants;
    this.btnSchools = btnSchools;
    this.btnSearch = btnSearch;
    this.horizontalScrollView = horizontalScrollView;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.txtPlace = txtPlace;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBanks;
      Button btnBanks = ViewBindings.findChildViewById(rootView, id);
      if (btnBanks == null) {
        break missingId;
      }

      id = R.id.btnHospitals;
      Button btnHospitals = ViewBindings.findChildViewById(rootView, id);
      if (btnHospitals == null) {
        break missingId;
      }

      id = R.id.btnHotels;
      Button btnHotels = ViewBindings.findChildViewById(rootView, id);
      if (btnHotels == null) {
        break missingId;
      }

      id = R.id.btnRestaurants;
      Button btnRestaurants = ViewBindings.findChildViewById(rootView, id);
      if (btnRestaurants == null) {
        break missingId;
      }

      id = R.id.btnSchools;
      Button btnSchools = ViewBindings.findChildViewById(rootView, id);
      if (btnSchools == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.txtPlace;
      EditText txtPlace = ViewBindings.findChildViewById(rootView, id);
      if (txtPlace == null) {
        break missingId;
      }

      return new ActivityMapsBinding((ConstraintLayout) rootView, btnBanks, btnHospitals, btnHotels,
          btnRestaurants, btnSchools, btnSearch, horizontalScrollView, linearLayout, linearLayout2,
          txtPlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
